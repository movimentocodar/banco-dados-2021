-- Banco de dados Biblioteca
DROP DATABASE IF EXISTS  `BIBLIOTECA`;
CREATE SCHEMA IF NOT EXISTS `BIBLIOTECA` DEFAULT CHARACTER SET utf8 ;

USE `BIBLIOTECA`;

-- Tabela Autor
DROP TABLE IF EXISTS AUTOR;
CREATE TABLE IF NOT EXISTS `BIBLIOTECA`.`AUTOR` (
    `AUTOR_KEY` BIGINT NOT NULL AUTO_INCREMENT,
    `NOME` VARCHAR(100) NULL,
    `SOBRENOME` VARCHAR(150) NULL,
    `DATA_DE_NASCIMENTO` DATE NULL,
    CONSTRAINT AUTOR_KEY_PK PRIMARY KEY (AUTOR_KEY)   
);

-- Tabela Editora
DROP TABLE IF EXISTS EDITORA;
CREATE TABLE IF NOT EXISTS `BIBLIOTECA`.`EDITORA` (
    `EDITORA_KEY` BIGINT NOT NULL AUTO_INCREMENT,
    `NOME` VARCHAR(250) NOT NULL,
    `DATA_DE_FUNDACAO` DATE NULL,
    CONSTRAINT EDITORA_KEY_PK PRIMARY KEY (EDITORA_KEY)
);

-- Tabela Livro
DROP TABLE IF EXISTS LIVRO;
CREATE TABLE IF NOT EXISTS `BIBLIOTECA`.`LIVRO` (
    `ISBN` BIGINT(10) NOT NULL,
    `TITULO` VARCHAR(45) NOT NULL,
    `DATA_DE_PUBLICACAO` DATE NULL,
    `QUANTIDADE_DE_PAGINA` INT NULL,
    `IDIOMA` ENUM('PORTUGUES', 'INGLES', 'ESPANHOL') NOT NULL,
    `AUTOR_KEY` BIGINT NOT NULL NULL,
    `EDITORA_KEY` BIGINT NOT NULL,
    CONSTRAINT ISBN_PK PRIMARY KEY (ISBN),
    CONSTRAINT FK_AUTOR_KEY FOREIGN KEY (AUTOR_KEY)
        REFERENCES AUTOR (AUTOR_KEY),
    CONSTRAINT FK_EDITORA_KEY FOREIGN KEY (EDITORA_KEY)
        REFERENCES EDITORA (EDITORA_KEY)
);

-- Tabela Usuario
DROP TABLE IF EXISTS USUARIO;  
CREATE TABLE IF NOT EXISTS `BIBLIOTECA`. `USUARIO`(
`CPF` BIGINT NOT NULL, -- CPF (Apenas os números)
`NOME` VARCHAR(100) NOT NULL,  -- Nome`
`EMAIL` VARCHAR(250) NOT NULL, -- E-mail
`TELEFONE` INT NULL, -- Telefone (Não é obrigatório informar o telefone)
CONSTRAINT CPF_PK PRIMARY KEY (CPF));

-- Tabela Emprestimo
DROP TABLE IF EXISTS EMPRESTIMO;  
CREATE TABLE IF NOT EXISTS `BIBLIOTECA`. `EMPRESTIMO`(
`EMPRESTIMO_KEY` BIGINT NOT NULL AUTO_INCREMENT,
`ISBN` BIGINT(10) NOT NULL, -- O livro emprestado    - CAHVE ESTRANGEIRA
`CPF` BIGINT NOT NULL, -- O usuário que emprestou        - CHAVE ESTRANGEIRA
`DATA_DE_RETIRADA` DATE NOT NULL, -- Qual a data em que o livro foi retirada
`DIAS_DE_EMPRESTIMO` INT NOT NULL, -- Quantidade de dias do empréstimo
`DEVOLVIDO` BOOLEAN NULL, -- Se já foi devolvido ou não
CONSTRAINT EMPRESTIMO_KEY_PK PRIMARY KEY (EMPRESTIMO_KEY),
CONSTRAINT FK_ISBN FOREIGN KEY (ISBN)
        REFERENCES LIVRO(ISBN),
CONSTRAINT FK_CPF_KEY FOREIGN KEY (CPF)
        REFERENCES USUARIO(CPF));       